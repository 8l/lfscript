#!/bin/bash

# The instructions in this file are extracted from
# 'Beyond Linux From Scratch' (2014-08-22 / r13994) but are modified for use
# with LFScript 4 which installs the software to a fake root directory.
#
# Beyond Linux From Scratch is released under the MIT license.
# Copyright (C) 2001-2014, The BLFS Development Team

WGETLIST="ftp://mirror.ovh.net/gentoo-distfiles/distfiles/xinetd-2.3.15.tar.gz
          http://www.linuxfromscratch.org/blfs/downloads/svn/blfs-bootscripts-20140810.tar.bz2"
MD5SUMLIST="77358478fd58efa6366accae99b8b04c
            179a6c22d0f7d2619cba4eb794fdc1cb"
POSTINST="now"

###############################################
installation() { # INSTALLING SYSTEM SOFTWARE #
###############################################

sed -i -e "s/exec_server/child_process/" xinetd/builtins.c
sed -i -e "/register unsigned count/s/register//" xinetd/itox.c
./configure --prefix=/usr --mandir=/usr/share/man --with-loadavg
make

make DESTDIR=${FAKEROOT} install

cat > ${FAKEROOT}/etc/xinetd.conf << "EOF"
# Begin /etc/xinetd
# Configuration file for xinetd

defaults
{
      instances       = 60
      log_type        = SYSLOG daemon
      log_on_success  = HOST PID USERID
      log_on_failure  = HOST USERID
      cps             = 25 30
}

# All service files are stored in the /etc/xinetd.d directory

includedir /etc/xinetd.d

# End /etc/xinetd
EOF

install -v -d -m755 ${FAKEROOT}/etc/xinetd.d

cat > ${FAKEROOT}/etc/xinetd.d/systat << "EOF"
# Begin /etc/xinetd.d/systat

service systat
{
   disable           = yes
   socket_type       = stream
   wait              = no
   user              = nobody
   server            = /bin/ps
   server_args       = -auwwx
   only_from         = 128.138.209.0
   log_on_success    = HOST
}

# End /etc/xinetd.d/systat
EOF

cat > ${FAKEROOT}/etc/xinetd.d/echo << "EOF"
# Begin /etc/xinetd.d/echo

service echo
{
   disable     = yes
   type        = INTERNAL
   id          = echo-stream
   socket_type = stream
   protocol    = tcp
   user        = root
   wait        = no
}

service echo
{
   disable     = yes
   type        = INTERNAL
   id          = echo-dgram
   socket_type = dgram
   protocol    = udp
   user        = root
   wait        = yes
}

# End /etc/xinetd.d/echo
EOF

cat > ${FAKEROOT}/etc/xinetd.d/chargen << "EOF"
# Begin /etc/xinetd.d/chargen

service chargen
{
   disable        = yes
   type           = INTERNAL
   id             = chargen-stream
   socket_type    = stream
   protocol       = tcp
   user           = root
   wait           = no
}

service chargen
{
   disable        = yes
   type           = INTERNAL
   id             = chargen-dgram
   socket_type    = dgram
   protocol       = udp
   user           = root
   wait           = yes
}

# End /etc/xinetd.d/chargen
EOF

cat > ${FAKEROOT}/etc/xinetd.d/daytime << "EOF"
# Begin /etc/xinetd.d/daytime

service daytime
{
   disable        = yes
   type           = INTERNAL
   id             = daytime-stream
   socket_type    = stream
   protocol       = tcp
   user           = root
   wait           = no
}

service daytime
{
   disable        = yes
   type           = INTERNAL
   id             = daytime-dgram
   socket_type    = dgram
   protocol       = udp
   user           = root
   wait           = yes
}

# End /etc/xinetd.d/daytime
EOF

cat > ${FAKEROOT}/etc/xinetd.d/time << "EOF"
# Begin /etc/xinetd.d/time

service time
{
   disable        = yes
   type           = INTERNAL
   id             = time-stream
   socket_type    = stream
   protocol       = tcp
   user           = root
   wait           = no
}

service time
{
   disable        = yes
   type           = INTERNAL
   id             = time-dgram
   socket_type    = dgram
   protocol       = udp
   user           = root
   wait           = yes
}

# End /etc/xinetd.d/time
EOF

includeBootscript xinetd

###################################################
}; postinst() { # POST-INSTALLATION CONFIGURATION #
###################################################

/etc/rc.d/init.d/xinetd start

#################
} # END OF FILE #
#################

